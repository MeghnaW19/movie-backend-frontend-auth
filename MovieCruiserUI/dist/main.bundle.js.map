{"version":3,"sources":["D:/Latest_FSD/movie-fsd/MovieCruiserUI/src async","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/app.component.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/app.module.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login.service.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login/login.component.css","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login/login.component.html","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login/login.component.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/recommended-movies/recommended-movies.component.css","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/recommended-movies/recommended-movies.component.html","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/recommended-movies/recommended-movies.component.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register-service.service.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register/register.component.css","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register/register.component.html","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register/register.component.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/environments/environment.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/main.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/movie-list.component.html","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/movie-list.component.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/movie.service.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/trending-list.component.ts","D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/upcoming-list.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component } from '@angular/core';\r\nimport { MovieListComponent } from 'movies/movie-list.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <div>\r\n        <nav class='navbar navbar-default'>\r\n            <div class='container-fluid'>\r\n                <a class='navbar-brand'>{{pageTitle}}</a>\r\n                <ul class='nav navbar-nav'>\r\n                    <li><a [routerLink]=\"['/movie']\">Dashboard</a></li>\r\n                    <li><a [routerLink]=\"['/trending']\">Popular Movies</a></li>\r\n                    <li><a [routerLink]=\"['/forthcoming']\">UpComing Movies</a></li>\r\n                    <li><a [routerLink]=\"['/recommended']\">My Recommendations</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        <div class='container'>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n     </div>\r\n    `\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MovieListComponent } from 'movies/movie-list.component';\r\nimport { MovieService } from 'movies/movie.service';\r\nimport { TrendingListComponent } from 'movies/trending-list.component';\r\nimport { UpcomingListComponent } from 'movies/upcoming-list.component';\r\n//import { RecommendedListComponent } from 'movies/recommendation-list.component';\r\nimport { RecommendedMoviesComponent } from './recommended-movies/recommended-movies.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport { LoginService } from 'app/login.service';\r\nimport { RegisterServiceService } from 'app/register-service.service';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MovieListComponent,\r\n    TrendingListComponent,\r\n    UpcomingListComponent,\r\n    //RecommendedListComponent,\r\n    RecommendedMoviesComponent,\r\n    RegisterComponent,\r\n    LoginComponent\r\n   \r\n  \r\n  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: 'movie', component: MovieListComponent },\r\n      { path: 'trending', component: TrendingListComponent },\r\n      { path: 'forthcoming', component: UpcomingListComponent },\r\n       { path: 'recommended', component: RecommendedMoviesComponent },\r\n      { path: '', redirectTo: 'login', pathMatch: 'full'},\r\n      {path:'login',component: LoginComponent },\r\n      {path:'register',component:RegisterComponent},\r\n      { path: '**', redirectTo: 'login', pathMatch: 'full'}\r\n  ])\r\n  ],\r\n  providers: [MovieService,\r\n              LoginService,\r\n              RegisterServiceService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  private loginUrl : string;\r\n  constructor(\r\n    private http: HttpClient,\r\n\r\n  ) {\r\n    this.loginUrl = \"http://localhost:8082/user/login\"\r\n  }\r\n\r\n  login(user:any): Observable<any>{\r\n    \r\n\r\n    return this.http.post<any>(this.loginUrl, user);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\t\\r\\n\\r\\n  <h2>Login</h2>\\r\\n \\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\"> \\r\\n   <input type=\\\"text\\\" placeholder=\\\"UserName\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.userId\\\" #username=\\\"ngModel\\\" required >\\r\\n   <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">Username is required</div> \\r\\n   </div>\\r\\n   <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\r\\n   <input type=\\\"password\\\" placeholder=\\\"Password\\\"  class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required>\\r\\n   <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\r\\n   </div>\\r\\n   <button class=\\\"btn btn-primary\\\">Log In</button> \\r\\n   <a [routerLink]=\\\"['/register']\\\" >Register</a>\\r\\n   \\r\\n          </form>\\r\\n        </div>\\r\\n        </div>\\r\\n          \\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport {LoginService} from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers:[LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n   \r\n user: any = {};\r\n  loading = false;\r\n   constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private loginService: LoginService\r\n    \r\n   \r\n   ) { }\r\n\r\n   ngOnInit() {\r\n   }\r\n  login() {\r\n    this.loading = true;\r\n    this.loginService.login(this.user)\r\n        .subscribe(\r\n            data => {\r\n               \r\n               this.router.navigate(['movie']);\r\n            },\r\n            error => {\r\n                //this.alertService.error(error.error.message);\r\n                alert(\"Invalid Credentials\");\r\n                this.loading = false;\r\n            });\r\n  }\r\n\r\n  link(){\r\n    this.router.navigate(['register']);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/recommended-movies/recommended-movies.component.css\n// module id = ../../../../../src/app/recommended-movies/recommended-movies.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n        {{pageTitle}}\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Filter by Name:</div>\\r\\n            <div class=\\\"col-md-4\\\"><input type='text' [(ngModel)]='listFilter' /></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\"><h3>Filtered by: {{listFilter}} </h3></div>\\r\\n        </div>\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class='table'\\r\\n                    *ngIf='movieCruisers && movieCruisers.length'>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>\\r\\n                            <button class='btn btn-primary'\\r\\n                                (click)='toggleImage()'>\\r\\n                                {{showImage ? 'Hide' : 'Show'}} Image\\r\\n                            </button>\\r\\n                        </th>\\r\\n                        <th>Name</th>\\r\\n                        <th>Comments</th>\\r\\n                        <th>Release Date</th>\\r\\n                        <th>Vote Count</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor='let movie of filteredMovies; let i = index'>\\r\\n                        <td>\\r\\n                            <img *ngIf='showImage'\\r\\n                                src='http://image.tmdb.org/t/p/w185{{movie.posterPath}}'\\r\\n                                [title]='movie.Name'\\r\\n                                [style.width.px]='imageWidth'\\r\\n                                [style.margin.px]='imageMargin'>\\r\\n                        </td>\\r\\n                        <td>  {{ movie.name }}\\r\\n                        </td>\\r\\n                        <td><input type=\\\"input\\\" [(ngModel)]=\\\"movie.comments\\\" value=\\\"{{movie.comments }}\\\"/></td>\\r\\n                        <td>{{ movie.releaseDate }}</td>\\r\\n                        <td>{{ movie.voteCount }}</td>\\r\\n                      <td> <button (click)='editMovieCruiser($event,i,movie)'> save Comment </button></td>\\r\\n\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/recommended-movies/recommended-movies.component.html\n// module id = ../../../../../src/app/recommended-movies/recommended-movies.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport {Movie} from '../../movies/movie-cruiser';\r\nimport { MovieService } from '../../movies/movie.service';\r\n\r\n@Component({\r\n  selector: 'app-recommended-movies',\r\n  templateUrl: './recommended-movies.component.html',\r\n  styleUrls: ['./recommended-movies.component.css']\r\n})\r\nexport class RecommendedMoviesComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Recommended Movie List';\r\n  imageWidth: number = 80;\r\n  imageMargin: number = 2;\r\n  showImage: boolean = true;\r\n  errorMessage: string;\r\n\r\n  _listFilter: string;\r\n  get listFilter(): string {\r\n      return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      this.filteredMovies = this.listFilter ? this.performFilter(this.listFilter) : this.movieCruisers;\r\n  }\r\n\r\n  filteredMovies: Movie[];\r\n \r\n  movieCruisers:Movie[]=[];\r\n\r\n  constructor(private _movieService: MovieService) {\r\n\r\n  }\r\n\r\n  performFilter(filterBy: string): Movie[] {\r\n      filterBy = filterBy.toLocaleLowerCase();\r\n      return this.movieCruisers.filter((movieCruiser: Movie) =>\r\n      movieCruiser.name.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  toggleImage(): void {\r\n      this.showImage = !this.showImage;\r\n  }\r\n  editMovieCruiser(event,index,selectedMovie) {\r\n    \r\n    \r\n    this._movieService.editMovie(selectedMovie)\r\n        .subscribe(\r\n            data => {\r\n            console.log(selectedMovie);\r\n               \r\n                \r\n            },\r\n            error => {\r\n                console.log(\"Boom\");\r\n            });\r\n  }\r\n\r\n   recommendMovie(event,index,selectedMovie) : void {\r\n      let text = event.target.outerText;\r\n      let currVal = (text == \"Recommend\") ? \"Unrecommend\" : \"Recommend\";\r\n      this._movieService.recommendMovies(selectedMovie).subscribe(\r\n              data =>{\r\n               event.target.innerHTML = currVal;\r\n               this.initRecommendRequest();\r\n                 }\r\n           );\r\n     }\r\n\r\n    initRecommendRequest() : void {\r\n    this._movieService.getRecommendedMovies()\r\n                  .subscribe(movieCruisers => {\r\n                    this.movieCruisers = movieCruisers;\r\n                    this.filteredMovies = this.movieCruisers;\r\n                       },\r\n                      error => this.errorMessage = <any>error);\r\n              }\r\n\r\n  ngOnInit(): void {\r\n      this.initRecommendRequest();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/recommended-movies/recommended-movies.component.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\nexport class RegisterServiceService {\r\n\r\n  private registerUrl : string;\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    this.registerUrl =\"http://localhost:8082/user/register\";\r\n  }\r\n\r\n  register(user: any): Observable<any>{\r\n    return this.http.post<any>(this.registerUrl, user);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register-service.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = 1","module.exports = \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && register()\\\" #f=\\\"ngForm\\\" novalidate>\\t\\r\\n  \\r\\n  <h2>Register</h2>\\r\\n \\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\"> \\r\\n   <input type=\\\"text\\\" placeholder=\\\"UserName\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.userId\\\" #username=\\\"ngModel\\\" required />\\r\\n   <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">Username is required</div> \\r\\n   </div>\\r\\n  \\r\\n   <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\r\\n   <input type=\\\"password\\\" placeholder=\\\"Password\\\"  class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required />\\r\\n   <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\r\\n   </div>\\r\\n\\r\\n   <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !firstname.valid }\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"FirstName\\\"  class=\\\"form-control\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"user.firstName\\\" #firstname=\\\"ngModel\\\" required />\\r\\n    <div *ngIf=\\\"f.submitted && !firstname.valid\\\" class=\\\"help-block\\\">First Name is required</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !lastname.valid }\\\">\\r\\n      <input type=\\\"text\\\" placeholder=\\\"LastName\\\"  class=\\\"form-control\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"user.lastName\\\" #lastname=\\\"ngModel\\\" required />\\r\\n      <div *ngIf=\\\"f.submitted && !lastname.valid\\\" class=\\\"help-block\\\">Last Name is required</div>\\r\\n      </div>\\r\\n  \\r\\n   <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Register</button> \\r\\n   <a [routerLink]=\\\"['/login']\\\">Cancel</a>\\r\\n    \\r\\n    </form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterServiceService } from '../register-service.service';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n  providers:[RegisterServiceService]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  user: any = {};\r\n  loading = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private registerService: RegisterServiceService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  register() {\r\n    this.loading = true;\r\n    this.registerService.register(this.user)\r\n        .subscribe(\r\n            data => {\r\n              console.log(\"Im in\");\r\n                //this.alertService.success('Registration successful', true);\r\n                this.router.navigate(['login']);\r\n            },\r\n            error => {\r\n                console.log(\"error\")\r\n                //this.alertService.error(error.error.message);\r\n                this.loading = false;\r\n            });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/app/register/register.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/main.ts","module.exports = \"<div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n        {{pageTitle}}\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Filter by Name:</div>\\r\\n            <div class=\\\"col-md-4\\\"><input type='text' [(ngModel)]='listFilter' /></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\"><h3>Filtered by: {{listFilter}} </h3></div>\\r\\n        </div>\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class='table'\\r\\n                    *ngIf='movies && movies.length'>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>\\r\\n                            <button class='btn btn-primary'\\r\\n                                (click)='toggleImage()'>\\r\\n                                {{showImage ? 'Hide' : 'Show'}} Image\\r\\n                            </button>\\r\\n                        </th>\\r\\n                        <th>Name</th>\\r\\n                        <th>Release Date</th>\\r\\n                        <th>Overview</th>\\r\\n                        <th>Vote Average</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor='let movie of filteredMovies; let i = index'>\\r\\n\\r\\n                        <td>\\r\\n                            <img *ngIf='showImage'\\r\\n                                src='http://image.tmdb.org/t/p/w185{{movie.poster_path}}'\\r\\n                                [title]='movie.title'\\r\\n                                [style.width.px]='imageWidth'\\r\\n                                [style.margin.px]='imageMargin'>\\r\\n                        </td>\\r\\n                        <td>    {{ movie.title }}\\r\\n                        </td>\\r\\n                        <td>{{ movie.release_date }}</td>\\r\\n                        <td>{{ movie.overview }}</td>\\r\\n                        <td>{{ movie.vote_average }}</td>\\r\\n                      <td> <button (click)='recommendMovie($event,i,movie)'> {{recommendMovieOK(movie.id)}} </button></td>\\r\\n                      \\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/movie-list.component.html\n// module id = ../../../../../src/movies/movie-list.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { IMovie } from './movie';\r\nimport { MovieService } from './movie.service';\r\nimport {Movie} from './movie-cruiser';\r\n\r\n@Component({\r\n  templateUrl: './movie-list.component.html'\r\n})\r\nexport class MovieListComponent implements OnInit {\r\n  pageTitle: string = 'Movie List';\r\n  imageWidth: number = 80;\r\n  imageMargin: number = 2;\r\n  showImage: boolean = true;\r\n  errorMessage: string;\r\n  AlreadyRecommended:Movie[]=[];\r\n  _listFilter: string;\r\n  get listFilter(): string {\r\n      return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      this.filteredMovies = this.listFilter ? this.performFilter(this.listFilter) : this.movies;\r\n  }\r\n\r\n  filteredMovies: IMovie[];\r\n  movies: IMovie[] = [];\r\n  movieCruiser={};\r\n  disableButton=false;\r\n\r\n\r\n  constructor(private _movieService: MovieService) {\r\n\r\n  }\r\n\r\n  onRatingClicked(message: string): void {\r\n      this.pageTitle = 'Movie List: ' + message;\r\n  }\r\n\r\n  performFilter(filterBy: string): IMovie[] {\r\n      filterBy = filterBy.toLocaleLowerCase();\r\n      return this.movies.filter((movie: IMovie) =>\r\n            movie.title.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n \r\n\r\n recommendMovie(event,index,selectedMovie) : void {\r\n       let text = event.target.outerText;\r\n       this.disableButton=true;\r\n       \r\n       let currVal = (text == \"Recommend\") ? \"Unrecommend\" : \"Recommend\";\r\n       \r\n       this.movieCruiser['id'] = selectedMovie.id;\r\n       this.movieCruiser['name'] = selectedMovie.title;\r\n       this.movieCruiser['posterPath'] = selectedMovie.poster_path;\r\n       this.movieCruiser['releaseDate'] = selectedMovie.release_date;\r\n       this.movieCruiser['voteCount'] = selectedMovie.vote_count;\r\n       \r\n       console.log(\"Movie Cruiser\"+JSON.stringify(this.movieCruiser));\r\n       \r\n       this._movieService.recommendMovies(this.movieCruiser).subscribe(\r\n               data =>{\r\n                event.target.innerHTML = currVal;\r\n                  }\r\n            );\r\n      }\r\n\r\n  toggleImage(): void {\r\n      this.showImage = !this.showImage;\r\n  }\r\n  recommendMovieOK(movieid : any): any {\r\n    console.log(\"tttttyyyyyyyyyy\" + movieid);\r\n    console.log(\"this.AlreadyRecommended.length\" + this.AlreadyRecommended.length);\r\n    var buttonText = \"Recommend\";\r\n    for (var i=0;i<this.AlreadyRecommended.length;i++  ){\r\n        console.log(\"ttttt\"+this.AlreadyRecommended[i].id);\r\n        if(this.AlreadyRecommended[i].id == movieid){\r\n             buttonText = \"Unrecommend\"\r\n        }\r\n    }\r\n    \r\n   return buttonText;\r\n }\r\n\r\n ngOnInit(): void {\r\n      this._movieService.getUpcomingMovies()\r\n              .subscribe(movies => {\r\n                  this.movies = movies.results;\r\n                  this.filteredMovies = this.movies;\r\n              },\r\n                  error => this.errorMessage = <any>error);\r\n\r\n                  this._movieService.getRecommendedMovies()\r\n                  .subscribe(movieCruisers => {\r\n                    this.AlreadyRecommended = movieCruisers;\r\n                    console.log(\"pistae: \"+ JSON.stringify(this.AlreadyRecommended))\r\n                       },\r\n                      error => this.errorMessage = <any>error);\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/movie-list.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/map';\r\nimport {Movie} from './movie-cruiser';\r\n//import { IMovie } from './movie';\r\nimport { IResult } from 'movies/result';\r\n\r\n\r\n@Injectable()\r\nexport class MovieService {\r\n   private _movieUpcomingUrl = 'https://api.themoviedb.org/3/movie/upcoming?api_key=c151506a66c898dc3443d41f1636ebde&language=en-US';\r\n   private _moviePopularUrl = 'https://api.themoviedb.org/3/movie/popular?api_key=c151506a66c898dc3443d41f1636ebde&language=en-US&page=1';\r\n\r\n        private _movieRecommendedListUrl = 'http://localhost:8089/api/movie';\r\n        private _movieRecommendUrl = 'http://localhost:8089/api/movie';\r\n\r\n\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getTrendingMovies(): Observable<IResult> {\r\n        return this._http.get<IResult>(this._moviePopularUrl)\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getUpcomingMovies(): Observable<IResult> {\r\n        return this._http.get<IResult>(this._movieUpcomingUrl)\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getRecommendedMovies(): Observable<any> {\r\n         return this._http.get<any>(this._movieRecommendedListUrl)\r\n                .do(data => console.log('All: ' + JSON.stringify(data)))\r\n                .catch(this.handleError);\r\n    }\r\n\r\n    recommendMovies(Movie): Observable<any> {\r\n         return this._http.post<any>(this._movieRecommendUrl, Movie)\r\n                  .do(data => console.log('All: ' + JSON.stringify(data)))\r\n                  .catch(this.handleError);\r\n    }\r\n    editMovie(Movie): Observable<any>{\r\n        return this._http.put<any>(this._movieRecommendUrl+\"/\"+Movie.id,Movie)\r\n        .do(data => console.log('All: ' + JSON.stringify(data)))\r\n        .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof Error) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return Observable.throw(errorMessage);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/movie.service.ts","import { Component, OnInit } from '@angular/core';\r\nimport {Movie} from '../movies/movie-cruiser';\r\nimport { IMovie } from './movie';\r\nimport { MovieService } from './movie.service';\r\n\r\n@Component({\r\n  templateUrl: './movie-list.component.html'\r\n})\r\nexport class TrendingListComponent implements OnInit {\r\n  pageTitle: string = 'Popular Movie List';\r\n  imageWidth: number = 80;\r\n  imageMargin: number = 2;\r\n  showImage: boolean = true;\r\n  errorMessage: string;\r\n  movieCruiser={};\r\n  AlreadyRecommended:Movie[]=[];\r\n\r\n  _listFilter: string;\r\n  get listFilter(): string {\r\n      return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      this.filteredMovies = this.listFilter ? this.performFilter(this.listFilter) : this.movies;\r\n  }\r\n\r\n  filteredMovies: IMovie[];\r\n  movies: IMovie[] = [];\r\n\r\n  constructor(private _movieService: MovieService) {\r\n\r\n  }\r\n\r\n  performFilter(filterBy: string): IMovie[] {\r\n      filterBy = filterBy.toLocaleLowerCase();\r\n      return this.movies.filter((movie: IMovie) =>\r\n            movie.title.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  toggleImage(): void {\r\n      this.showImage = !this.showImage;\r\n  }\r\n\r\n  recommendMovieOK(movieid : any): any {\r\n    var buttonText = \"Recommend\";\r\n    for (var i=0;i<this.AlreadyRecommended.length;i++  ){\r\n        \r\n        if(this.AlreadyRecommended[i].id == movieid){\r\n             buttonText = \"Unrecommend\"\r\n        }\r\n    }   \r\n   return buttonText;\r\n }\r\n\r\n  recommendMovie(event,index,selectedMovie) : void {\r\n        let text = event.target.outerText;\r\n        this.movieCruiser['id'] = selectedMovie.id;\r\n        this.movieCruiser['name'] = selectedMovie.title;\r\n        this.movieCruiser['posterPath'] = selectedMovie.poster_path;\r\n        this.movieCruiser['releaseDate'] = selectedMovie.release_date;\r\n        this.movieCruiser['voteCount'] = selectedMovie.vote_count;\r\n        let currVal = (text == \"Recommend\") ? \"Unrecommend\" : \"Recommend\";\r\n        this._movieService.recommendMovies(this.movieCruiser).subscribe(\r\n                data =>{\r\n                 event.target.innerHTML = currVal;\r\n                   }\r\n             );\r\n       }\r\n\r\n  ngOnInit(): void {\r\n      this._movieService.getTrendingMovies()\r\n              .subscribe(movies => {\r\n                  this.movies = movies.results;\r\n                  this.filteredMovies = this.movies;\r\n              },\r\n                  error => this.errorMessage = <any>error);\r\n\r\n                  this._movieService.getRecommendedMovies()\r\n                  .subscribe(movieCruisers => {\r\n                    this.AlreadyRecommended = movieCruisers;\r\n                    console.log(\"pistae: \"+ JSON.stringify(this.AlreadyRecommended))\r\n                       },\r\n                      error => this.errorMessage = <any>error);\r\n              \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/trending-list.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport {Movie} from '../movies/movie-cruiser';\r\nimport { IMovie } from './movie';\r\nimport { MovieService } from './movie.service';\r\n\r\n@Component({\r\n  templateUrl: './movie-list.component.html'\r\n})\r\nexport class UpcomingListComponent implements OnInit {\r\n  pageTitle: string = 'Upcoming Movie List';\r\n  imageWidth: number = 80;\r\n  imageMargin: number = 2;\r\n  showImage: boolean = true;\r\n  errorMessage: string;\r\n  movieCruiser={};\r\n  AlreadyRecommended:Movie[]=[];\r\n  mov:Movie[];\r\n  buttonText:any;\r\n\r\n  _listFilter: string;\r\n  get listFilter(): string {\r\n      return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n      this._listFilter = value;\r\n      this.filteredMovies = this.listFilter ? this.performFilter(this.listFilter) : this.movies;\r\n  }\r\n\r\n  filteredMovies: IMovie[];\r\n  movies: IMovie[] = [];\r\n\r\n  constructor(private _movieService: MovieService) {\r\n\r\n  }\r\n\r\n  recommendMovieOK(movieid : any): any {\r\n    console.log(\"tttttyyyyyyyyyy\" + movieid);\r\n    console.log(\"this.AlreadyRecommended.length\" + this.AlreadyRecommended.length);\r\n    var buttonText = \"Recommend\";\r\n    for (var i=0;i<this.AlreadyRecommended.length;i++  ){\r\n        console.log(\"ttttt\"+this.AlreadyRecommended[i].id);\r\n        if(this.AlreadyRecommended[i].id == movieid){\r\n             buttonText = \"Unrecommend\"\r\n        }\r\n    }\r\n    \r\n   return buttonText;\r\n }\r\n\r\n  performFilter(filterBy: string): IMovie[] {\r\n      filterBy = filterBy.toLocaleLowerCase();\r\n      return this.movies.filter((movie: IMovie) =>\r\n            movie.title.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  toggleImage(): void {\r\n      this.showImage = !this.showImage;\r\n  }\r\n\r\n  recommendMovie(event,index,selectedMovie) : void {\r\n        let text = event.target.outerText;\r\n  \r\n        \r\n        //let currVal = (text == \"Recommend\") ? \"Unrecommend\" : \"Recommend\";\r\n        \r\n        this.movieCruiser['id'] = selectedMovie.id;\r\n        this.movieCruiser['name'] = selectedMovie.title;\r\n        this.movieCruiser['posterPath'] = selectedMovie.poster_path;\r\n        this.movieCruiser['releaseDate'] = selectedMovie.release_date;\r\n        this.movieCruiser['voteCount'] = selectedMovie.vote_count;\r\n        let currVal = (text == \"Recommend\") ? \"Unrecommend\" : \"Recommend\";\r\n        this._movieService.recommendMovies(this.movieCruiser).subscribe(\r\n                data =>{\r\n                 event.target.innerHTML = currVal;\r\n                   }\r\n             );\r\n       }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"Inside onnnnninitttttttttt\");\r\n      this._movieService.getUpcomingMovies()\r\n              .subscribe(movies => {\r\n                  this.movies = movies.results;\r\n                  this.filteredMovies = this.movies;\r\n              },\r\n                  error => this.errorMessage = <any>error);\r\n\r\n                  this._movieService.getRecommendedMovies()\r\n                  .subscribe(movieCruisers => {\r\n                    this.AlreadyRecommended = movieCruisers;\r\n                    console.log(\"pistae: \"+ JSON.stringify(this.AlreadyRecommended))\r\n                       },\r\n                      error => this.errorMessage = <any>error);\r\n              }\r\n  }\r\n\r\n\r\n \r\n\n\n\n// WEBPACK FOOTER //\n// D:/Latest_FSD/movie-fsd/MovieCruiserUI/src/movies/upcoming-list.component.ts"],"sourceRoot":"webpack:///"}